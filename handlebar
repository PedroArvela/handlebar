#!/usr/bin/env python3

import os
from subprocess import call
import argparse
import toml

def action_build(path, build):
	print("Todo")

def action_package(path, build):
	if args.verbose >= 1:
		print("Packaging " + build["name"] + "...")
	
	if build["type"] == "dir":
		build_folder = os.path.normpath(os.path.join(path, build["directory"]["path"]))
		if args.debug:
			print("Build folder: " + build_folder)
		call(["fpm", "-s", "dir", "-t", "deb", "-n", build["name"], build_folder], cwd=path)

# Parse command line arguments #################################################
parser = argparse.ArgumentParser(description="Build Debian packages from source easily")
                                                                                
parser.add_argument("-d", "--debug", action="store_true", help="enable debug mode")
parser.add_argument("-v", "--verbose", action="count", default=0, help="enables verbose output")

subparser = parser.add_subparsers(title="Sub-commands")

parser_build = subparser.add_parser("build", help="Build the source of a given program")
parser_build.set_defaults(action="build")
parser_build.add_argument("build_file", type=argparse.FileType('r', encoding='UTF-8'), help="The path to the file with the build instructions")

parser_package = subparser.add_parser("package", help="Package a given program")
parser_package.set_defaults(action="package")
parser_package.add_argument("build_file", type=argparse.FileType('r', encoding='UTF-8'), help="The path to the file with the build instructions")

args = parser.parse_args()

build_file = os.path.abspath(args.build_file.name)
build_file_name = os.path.basename(build_file)
build_path = os.path.dirname(build_file)

if args.debug:
	print("Opening " + build_file + "...")

build = toml.loads(args.build_file.read())

if args.debug:
	print(build)

if args.action == "build":
	action_build(build_path, build)
elif args.action == "package":
	action_package(build_path, build)
